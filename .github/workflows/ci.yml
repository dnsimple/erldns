name: CI

on:
  pull_request:
  push:
    branches: [ $default-branch ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  OTP_VERSION: "22.3.1"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.OTP_VERSION }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/rebar3
            _build
          key: ${{ runner.os }}-erlang-${{ env.OTP_VERSION }}-${{ hashFiles('**/*rebar.lock') }}
          restore-keys: |
            ${{ runner.os }}-erlang-${{ env.OTP_VERSION }}-

      - run: make build

  test:
    name: Test
    runs-on: ubuntu-latest
    needs:
      - build

    # Uncomment to create a PostgreSQL database
    #services:
    #  postgres:
    #    image: postgres:13.4-alpine
    #    ports:
    #      - 5432:5432
    #    env:
    #      POSTGRES_HOST_AUTH_METHOD: trust
    #      POSTGRES_USER: postgres
    #      POSTGRES_DB: dnsimple_test__redirector
    #    options: >-
    #      --health-cmd pg_isready
    #      --health-interval 10s
    #      --health-timeout 5s
    #      --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.OTP_VERSION }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/rebar3
            _build
          key: ${{ runner.os }}-erlang-${{ env.OTP_VERSION }}-${{ hashFiles('**/*rebar.lock') }}
          restore-keys: |
            ${{ runner.os }}-erlang-${{ env.OTP_VERSION }}-

      - run: make test

  slack-workflow-status:
    if: always()
    name: Post Workflow Status To Slack
    needs:
      - build
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL_DEVELOPMENT}}
